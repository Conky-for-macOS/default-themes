conky.config = {

--###########################################################################################
-- Sidebar-Conky					 					   #
-- by wim66 https://www.google.com/+WillemO						   #
-- 26-5-15										   #
-- "Inspired by" other people's code							   #
-- Calendar, more great conky's http://erikdubois.be/category/conky			   #
-- Jesse Avalos http://speedracker.deviantart.com/					   #
-- Weather font by Kelly Kretchek https://plus.google.com/u/0/103934698784251707937/posts   #
-- Wallpaper http://0rax0.deviantart.com/art/Linux-2014-Wallpaper-457151439		   #
-- Use with Conky-Manager								   #
-- http://www.teejeetech.in/p/conky-manager.html						   #
--											   #
--###########################################################################################

	background = false,
	double_buffer = true,
	no_buffers = true,
	text_buffer_size = 2048,
	imlib_cache_size = 0,
	update_interval = 1,
	cpu_avg_samples = 1,
	format_human_readable = true,

	alignment = 'top_left',
	gap_x = 0,
	gap_y = 0,
	minimum_width = 240, minimum_height = 1080,
	maximum_width = 240,

	own_window = true,
	own_window_type = 'normal',-- options are: normal/override/dock/desktop/panel
	own_window_class = 'Conky',
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',
	own_window_transparent = true,
	own_window_colour = '#333333',
	own_window_argb_visual = false,
	own_window_argb_value = 0,

	border_inner_margin = 0,
	border_outer_margin = 0,

	default_bar_width = 100, default_bar_height = 6,
	draw_shades = false,
	default_shade_color = '#000000',
	draw_outline = false,
	default_outline_color = '#000000',
	draw_borders = false,
	draw_graph_borders = true,
	default_graph_width = 40,220,
	show_graph_scale = false,
	show_graph_range = false,

	override_utf8_locale = true,
	use_xft = true,
	font = 'Adele:size=13,weight:normal',
	xftalpha = 1,
	uppercase = false,
	max_text_width = 40,

	default_color = '#ffffff',
	color1 = '#ffffff',
	color2 = '#FF5A45',
	color3 = '#81CAE0',
	color4 = '#FF5A45',

};

conky.text = [[
# day/time
${goto 10}${voffset 10}${font Adele:size=22,weight:normal}${color1}${time %A}${font Adele:size=30,weight:normal}${alignr 5}${time %H:%M}
#
#calendar
${voffset -15}${color1}${font Adele:size=14,weight:light}${alignc}${execpi 80000 ncal -MCh|sed '/\(20[0-9][0-9]\)/!s/^.*$/${offset 10}${font Courier:size=12,weight:light}${color4} &/;/\(20[0-9][0-9]\)/!s/.\{8\}$/${color3}&/;s/${color3} '"`date +%_d`"' /${color1} '"`date +%_d`"'${color3} /;/color1/!s/ '"`date +%_d`"'$c/${color1} '"`date +%_d`"'$c/;/color1/!s/ '"`date +%_d`"' /${color1} '"`date +%_d`"'${color2} /'}
#
# info
#${goto 10}$color1${voffset -10}${font Adele:size=15,weight:normal}${pre_exec lsb_release -d | cut -f 2| tr "[:upper:]" "[:upper:]"}${alignr 5}codename: ${pre_exec lsb_release -c | cut -f 2| tr "[:upper:]" "[:upper:]"}
# $sysname
${goto 10}$kernel
${goto 10}Desktop:${alignr 5}Aqua
#${goto 10}Installation date:${alignr 5}${pre_exec ls -ld /lost+found | cut -d' ' -f 6-7 --output-delimiter=' - '}
${goto 10}Uptime:${alignr 5}$uptime
#
# cpu load/temp/graph
${goto 10}${voffset 5}CPU1: ${cpu cpu1}%${alignr 10}${exec sensors|grep 'Core 0'|awk '{print $3}'}
${goto 10}${voffset -5}${color2}${cpugraph cpu1 40,220 66241C FF5A45}
${goto 10}${voffset 0}${color1}CPU2: ${cpu cpu2}%${alignr 10}${exec sensors|grep 'Core 1'|awk '{print $3}'}
${goto 10}${voffset -5}${color2}${cpugraph cpu2 40,220 66241C FF5A45}
#
# top processes
${voffset -5}${font Adele:size=15,weight:normal}${color1}${alignc}Top Processes ${font}
${voffset 4}${goto 10}${top name 1}${alignr 10}${top cpu 1}%
${goto 10}${voffset -2}${top name 2}${alignr 10}${top cpu 2}%
${goto 10}${voffset -2}${top name 3}${alignr 10}${top cpu 3}%
${goto 10}${voffset -2}${top name 4}${alignr 10}${top cpu 4}%
#
# top memory
${goto 10}${voffset 10}${font Adele:size=15,weight:normal}Memory${goto 70}${color2}$membar${alignr 10}${color1}$memperc%
${goto 10}${color1}${voffset -2}${font}${top_mem name 1}${alignr 10}${top mem 1}%
${goto 10}${voffset -2}${top_mem name 2}${alignr 10}${top mem 2}%
${goto 10}${voffset -2}${top_mem name 3}${alignr 10}${top mem 3}%
${goto 10}${voffset -2}${top_mem name 4}${alignr 10}${top mem 4}%
#
#network
${voffset 10}${goto 10}Network${alignr 10}SSID: ${wireless_essid en0}
${goto 10}Signal:${goto 70}${color2}${wireless_link_bar en0}${color1}${alignr 10}${wireless_link_qual_perc en0}%
${goto 10}IP: ${alignr 10}${addr en0}
${voffset 5}${goto 10}${color1}Upspeed:${alignr 10}${upspeed en0}
${goto 10}${voffset 0}Total up:${alignr 10}${totalup en0}
${goto 10}${color2}${upspeedgraph en0 40,220 66241C FF5A45 100 -l}
${goto 10}${color1}Down:$color1${alignr 10}${downspeed en0}
${goto 10}Total down:${alignr 10}${totaldown en0}
${goto 10}${color2}${downspeedgraph en0 40,220 66241C FF5A45 100 -l}
#
# weather
#
#------> Check Qaisar Nawaz' blog on how to change the weather location code: http://myconkys.blogspot.com.au/2014/04/weather-location-settings.html <-----#
#
${execi 300 curl -s "http://weather.yahooapis.com/forecastrss?w=727232&u=c" -o ./weather/cache/weather.xml}\
${font Adele:size=15,weight:normal}${goto 10}${color1}${voffset 0}${execi 300 grep "yweather:location" ./weather/cache/weather.xml | grep -o "city=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}, ${execi 300 grep "yweather:location" ./weather/cache/weather.xml | grep -o "country=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}
#
# weather discription
${goto 10}${voffset 0}${color1}${font Adele:size=15,weight:normal}\
${execi 360 grep "yweather:condition" ~/.cache/weather.xml | grep -o "text=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}\
${font}
#
# temp
${font LG Weather_Z:size=35}${goto 10}${voffset 0}${execi 300 grep "yweather:condition" ./weather/cache/weather.xml | grep -o "temp=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}°${font GeosansLight:normal:size=12}Celsius}
# high/low
${font}${goto 30}${voffset 5}${execi 300 grep "yweather:forecast" ./weather/cache/weather.xml | grep -o "high=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*" | awk 'NR==1'}°\
${goto 85}${voffset 0}${execi 300 grep "yweather:forecast" ./weather/cache/weather.xml | grep -o "low=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*" | awk 'NR==1'}°
#
# weather icons
#
${font Scalable weather v12.0:size=90,weight:normal}${color3}${voffset -90}${goto 150}${execi 300 sh weather/weather_font $(grep "yweather:condition" ./weather/cache/weather.xml | grep -o "code=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*")}
#
${image arrow-up.png -p 10,988 -s 15x15}
#
${image arrow-down.png -p 65,988 -s 15x15}
#
]];
